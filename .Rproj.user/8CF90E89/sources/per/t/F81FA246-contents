---
title: "BetaDiversity"
author: "Grant Nickles"
date: "12/2/2019"
output: html_document
---

```{r}
#source('http://bioconductor.org/biocLite.R')
#biocLite('phyloseq')

#If bioconductor wont work in your environment you can use BiocManager as shown below to instal the phyloseq package
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install(c("phyloseq"))


setwd("C:/Users/gnick/OneDrive/Desktop/Apples") #set this to the location you downloaded the apples.RDS file. Otherwise this won't work!
```
```{r}
library(phyloseq)
library(ggplot2)
library(vegan)
library(plyr)
C <- readRDS("apples.RDS")

```

Examining the data
```{r}
#head(sample_data(phy))

#ntaxa(phy)
sample_data(phy)
```
```{r}
tax_table(phy)
```

```{r}
phy.phylum = tax_glom(phy, taxrank = "Phylum", NArm = FALSE)
```

```{r}
test = plot_bar(phy.phylum, fill="")
test
```



#Step 1: Conducting the Alpha diversity similar to what was done in Table 2 
**The following website was used as a guide for conducting alpha diversity from a phyloseq object:**
https://joey711.github.io/phyloseq/plot_richness-examples.html


The following presets were recommended by the website before running any other code.
```{r}
theme_set(theme_bw())
pal = "Set1"
scale_colour_discrete <-  function(palname=pal, ...){
  scale_colour_brewer(palette=palname, ...)
}
scale_fill_discrete <-  function(palname=pal, ...){
  scale_fill_brewer(palette=palname, ...)
}
```

Prpeparing Data: Pruning OTU's that are not present in any of the samples
```{r}
#phy2 <- prune_species(speciesSums(phy) > 0, phy)
phy = subset_taxa(phy, Genus != "-1")
samplesThreshold <- ntaxa(phy) * 0.01
test <- prune_samples(sample_sums(phy) >= samplesThreshold, phy)
```

```{r}
plot_bar(test, fill = "Phylum")
```


Plotting the richness of the data with the Shannon diversity measurment. 
```{r}
plot_richness(phy, x = "mngmt", measures = "Shannon") + geom_boxplot()

rich = estimate_richness(phy)
```

```{r}
pairwise.wilcox.test(rich$Shannon, sample_data(phy)$mngmt)
```

```{r}
colnames(tax_table(phy))
```

Running a PCA on the Seed samples
```{r}
#ordinate

phy_pcoa <- ordinate(
  physeq = phy,
  method = "PCoA",
  distance = "bray"
)
p <- plot_ordination(
  physeq = phy,
  ordination = phy_pcoa,
  color = "mngmt",
  shape = "tissue",
  title = "PCoA of the bacterial communities in Apples"
)
plot(p)

#vegan: maybe will have to create binary table

```
```{r}
p <- p + scale_color_manual(values = c("#a65628", "red", "#ffae19",
    "#4daf4a", "#1919ff", "darkorchid3", "magenta")
  ) +
  geom_point(aes(color = mngmt), alpha = 0.7, size = 4) +
  geom_point(colour = "grey90", size = 1.5) 
```

Running the anlysis using every method but the unifraq
```{r}
?distance
```

```{r}
dist_methods <- unlist(distanceMethodList)
dist_methods <- dist_methods[-(1:3)]
dist_methods["designdist"]
```
```{r}
dist_methods = dist_methods[-which(dist_methods=="ANY")]
```

```{r}
phy = subset_taxa(phy, Genus != "-1")

plist <- vector("list", length(dist_methods))
names(plist) = dist_methods
for( i in dist_methods ){
    # Calculate distance matrix
    iDist <- distance(phy, method=i)
    # Calculate ordination
    iMDS  <- ordinate(phy, "PCoA", distance=iDist)
    ## Make plot
    # Don't carry over previous plot (if error, p will be blank)
    p <- NULL
    # Create plot, store as temp variable, p
    p <- plot_ordination(phy, iMDS, color="mngmt", shape="tissue")
    # Add title to each plot
    p <- p + ggtitle(paste("PCoA using distance method ", i, sep=""))
    # Save the graphic to file.
    plist[[i]] = p
}
```

```{r}
df = ldply(plist, function(x) x$data)
names(df)[1] <- "distance"
p = ggplot(df, aes(Axis.1, Axis.2, color=mngmt, shape=tissue))
p = p + geom_point(size=3, alpha=0.5)
p = p + facet_wrap(~distance, scales="free")
p = p + ggtitle("PCoA on various distance metrics for apple dataset")
p
```

```{r}
print(plist[["jsd"]])
print(plist[["cao"]])
```



